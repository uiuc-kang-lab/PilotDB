                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 GroupAggregate  (cost=129417528.23..129431356.72 rows=10024 width=272) (actual time=715404.944..720591.381 rows=4 loops=1)
   Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
   ->  Gather Merge  (cost=129417528.23..129429747.64 rows=97248 width=252) (actual time=714617.274..718802.623 rows=5828738 loops=1)
         Workers Planned: 11
         Workers Launched: 11
         ->  Sort  (cost=129416528.01..129416550.11 rows=8841 width=252) (actual time=714575.736..714721.977 rows=485728 loops=12)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: external merge  Disk: 38232kB
               Worker 0:  Sort Method: external merge  Disk: 38704kB
               Worker 1:  Sort Method: external merge  Disk: 38536kB
               Worker 2:  Sort Method: external merge  Disk: 37960kB
               Worker 3:  Sort Method: external merge  Disk: 37496kB
               Worker 4:  Sort Method: external merge  Disk: 38536kB
               Worker 5:  Sort Method: external merge  Disk: 37304kB
               Worker 6:  Sort Method: external merge  Disk: 38552kB
               Worker 7:  Sort Method: external merge  Disk: 37992kB
               Worker 8:  Sort Method: external merge  Disk: 38904kB
               Worker 9:  Sort Method: external merge  Disk: 38312kB
               Worker 10:  Sort Method: external merge  Disk: 38512kB
               ->  Parallel Hash Join  (cost=4080905.17..129415948.49 rows=8841 width=252) (actual time=7288.078..714136.118 rows=485728 loops=12)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     Join Filter: (((n1.n_name = 'FRANCE'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)) OR ((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'FRANCE'::bpchar)))
                     Rows Removed by Join Filter: 485497
                     ->  Nested Loop  (cost=247791.19..125575462.64 rows=1948217 width=124) (actual time=631.825..699927.044 rows=12145073 loops=12)
                           ->  Parallel Hash Join  (cost=247790.60..124572497.65 rows=1948217 width=128) (actual time=630.299..627153.273 rows=12145073 loops=12)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..123699816.20 rows=165598487 width=28) (actual time=0.853..561651.682 rows=151905939 loops=12)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 348093204
                                 ->  Parallel Hash  (cost=247496.49..247496.49 rows=23529 width=108) (actual time=629.003..629.017 rows=66646 loops=12)
                                       Buckets: 1048576 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 65632kB
                                       ->  Hash Join  (cost=12.58..247496.49 rows=23529 width=108) (actual time=0.417..576.856 rows=66646 loops=12)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..242103.24 rows=1999924 width=8) (actual time=0.301..517.902 rows=833333 loops=12)
                                             ->  Hash  (cost=12.55..12.55 rows=2 width=108) (actual time=0.063..0.068 rows=2 loops=12)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..12.55 rows=2 width=108) (actual time=0.046..0.049 rows=2 loops=12)
                                                         Filter: ((n_name = 'FRANCE'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                           ->  Memoize  (cost=0.59..2.44 rows=1 width=12) (actual time=0.006..0.006 rows=1 loops=145740881)
                                 Cache Key: lineitem.l_orderkey
                                 Cache Mode: logical
                                 Hits: 1668175  Misses: 10489665  Evictions: 9564040  Overflows: 0  Memory Usage: 104857kB
                                 Worker 0:  Hits: 1687565  Misses: 10587478  Evictions: 9661853  Overflows: 0  Memory Usage: 104857kB
                                 Worker 1:  Hits: 1682829  Misses: 10564304  Evictions: 9638679  Overflows: 0  Memory Usage: 104857kB
                                 Worker 2:  Hits: 1651185  Misses: 10379029  Evictions: 9453404  Overflows: 0  Memory Usage: 104857kB
                                 Worker 3:  Hits: 1634054  Misses: 10266190  Evictions: 9340565  Overflows: 0  Memory Usage: 104857kB
                                 Worker 4:  Hits: 1684210  Misses: 10580283  Evictions: 9654658  Overflows: 0  Memory Usage: 104857kB
                                 Worker 5:  Hits: 1625830  Misses: 10220586  Evictions: 9294961  Overflows: 0  Memory Usage: 104857kB
                                 Worker 6:  Hits: 1677067  Misses: 10542780  Evictions: 9617155  Overflows: 0  Memory Usage: 104857kB
                                 Worker 7:  Hits: 1656472  Misses: 10411175  Evictions: 9485550  Overflows: 0  Memory Usage: 104857kB
                                 Worker 8:  Hits: 1698571  Misses: 10667371  Evictions: 9741746  Overflows: 0  Memory Usage: 104857kB
                                 Worker 9:  Hits: 1671211  Misses: 10483771  Evictions: 9558146  Overflows: 0  Memory Usage: 104857kB
                                 Worker 10:  Hits: 1675910  Misses: 10535170  Evictions: 9609545  Overflows: 0  Memory Usage: 104857kB
                                 ->  Index Scan using orders_pkey on orders  (cost=0.58..2.43 rows=1 width=12) (actual time=0.005..0.005 rows=1 loops=125727802)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Parallel Hash  (cost=3830355.92..3830355.92 rows=220645 width=108) (actual time=6651.906..6651.916 rows=999531 loops=12)
                           Buckets: 16777216 (originally 2097152)  Batches: 1 (originally 1)  Memory Usage: 997120kB
                           ->  Hash Join  (cost=12.58..3830355.92 rows=220645 width=108) (actual time=0.107..5424.088 rows=999531 loops=12)
                                 Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..3779884.52 rows=18754852 width=8) (actual time=0.041..4047.409 rows=12500000 loops=12)
                                 ->  Hash  (cost=12.55..12.55 rows=2 width=108) (actual time=0.048..0.049 rows=2 loops=12)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n2  (cost=0.00..12.55 rows=2 width=108) (actual time=0.041..0.043 rows=2 loops=12)
                                             Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'FRANCE'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 11.605 ms
 Execution Time: 720634.870 ms
(68 rows)

