                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 GroupAggregate  (cost=129417528.23..129431356.72 rows=10024 width=272) (actual time=736572.382..741636.406 rows=4 loops=1)
   Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
   ->  Gather Merge  (cost=129417528.23..129429747.64 rows=97248 width=252) (actual time=735788.769..739837.929 rows=5828738 loops=1)
         Workers Planned: 11
         Workers Launched: 11
         ->  Sort  (cost=129416528.01..129416550.11 rows=8841 width=252) (actual time=735750.975..735889.740 rows=485728 loops=12)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: external merge  Disk: 38632kB
               Worker 0:  Sort Method: external merge  Disk: 38560kB
               Worker 1:  Sort Method: external merge  Disk: 38464kB
               Worker 2:  Sort Method: external merge  Disk: 38240kB
               Worker 3:  Sort Method: external merge  Disk: 37984kB
               Worker 4:  Sort Method: external merge  Disk: 38112kB
               Worker 5:  Sort Method: external merge  Disk: 38208kB
               Worker 6:  Sort Method: external merge  Disk: 38304kB
               Worker 7:  Sort Method: external merge  Disk: 37544kB
               Worker 8:  Sort Method: external merge  Disk: 37872kB
               Worker 9:  Sort Method: external merge  Disk: 38480kB
               Worker 10:  Sort Method: external merge  Disk: 38616kB
               ->  Parallel Hash Join  (cost=4080905.17..129415948.49 rows=8841 width=252) (actual time=7200.785..735308.379 rows=485728 loops=12)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     Join Filter: (((n1.n_name = 'FRANCE'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)) OR ((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'FRANCE'::bpchar)))
                     Rows Removed by Join Filter: 485497
                     ->  Nested Loop  (cost=247791.19..125575462.64 rows=1948217 width=124) (actual time=645.431..721370.742 rows=12145073 loops=12)
                           ->  Parallel Hash Join  (cost=247790.60..124572497.65 rows=1948217 width=128) (actual time=644.982..647292.565 rows=12145073 loops=12)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..123699816.20 rows=165598487 width=28) (actual time=0.482..581601.548 rows=151905939 loops=12)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 348093204
                                 ->  Parallel Hash  (cost=247496.49..247496.49 rows=23529 width=108) (actual time=644.236..644.246 rows=66646 loops=12)
                                       Buckets: 1048576 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 65632kB
                                       ->  Hash Join  (cost=12.58..247496.49 rows=23529 width=108) (actual time=0.392..590.896 rows=66646 loops=12)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..242103.24 rows=1999924 width=8) (actual time=0.288..532.261 rows=833333 loops=12)
                                             ->  Hash  (cost=12.55..12.55 rows=2 width=108) (actual time=0.055..0.058 rows=2 loops=12)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..12.55 rows=2 width=108) (actual time=0.040..0.043 rows=2 loops=12)
                                                         Filter: ((n_name = 'FRANCE'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                           ->  Memoize  (cost=0.59..2.44 rows=1 width=12) (actual time=0.006..0.006 rows=1 loops=145740881)
                                 Cache Key: lineitem.l_orderkey
                                 Cache Mode: logical
                                 Hits: 1684385  Misses: 10582869  Evictions: 9657244  Overflows: 0  Memory Usage: 104857kB
                                 Worker 0:  Hits: 1680908  Misses: 10555197  Evictions: 9629572  Overflows: 0  Memory Usage: 104857kB
                                 Worker 1:  Hits: 1679844  Misses: 10548690  Evictions: 9623065  Overflows: 0  Memory Usage: 104857kB
                                 Worker 2:  Hits: 1665929  Misses: 10465350  Evictions: 9539725  Overflows: 0  Memory Usage: 104857kB
                                 Worker 3:  Hits: 1658957  Misses: 10418378  Evictions: 9492753  Overflows: 0  Memory Usage: 104857kB
                                 Worker 4:  Hits: 1661138  Misses: 10427645  Evictions: 9502020  Overflows: 0  Memory Usage: 104857kB
                                 Worker 5:  Hits: 1664368  Misses: 10459602  Evictions: 9533977  Overflows: 0  Memory Usage: 104857kB
                                 Worker 6:  Hits: 1671459  Misses: 10492300  Evictions: 9566675  Overflows: 0  Memory Usage: 104857kB
                                 Worker 7:  Hits: 1636156  Misses: 10281902  Evictions: 9356277  Overflows: 0  Memory Usage: 104857kB
                                 Worker 8:  Hits: 1653693  Misses: 10392913  Evictions: 9467288  Overflows: 0  Memory Usage: 104857kB
                                 Worker 9:  Hits: 1673720  Misses: 10522524  Evictions: 9596899  Overflows: 0  Memory Usage: 104857kB
                                 Worker 10:  Hits: 1682478  Misses: 10580476  Evictions: 9654851  Overflows: 0  Memory Usage: 104857kB
                                 ->  Index Scan using orders_pkey on orders  (cost=0.58..2.43 rows=1 width=12) (actual time=0.006..0.006 rows=1 loops=125727846)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Parallel Hash  (cost=3830355.92..3830355.92 rows=220645 width=108) (actual time=6549.228..6549.238 rows=999531 loops=12)
                           Buckets: 16777216 (originally 2097152)  Batches: 1 (originally 1)  Memory Usage: 997120kB
                           ->  Hash Join  (cost=12.58..3830355.92 rows=220645 width=108) (actual time=0.089..5325.396 rows=999531 loops=12)
                                 Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..3779884.52 rows=18754852 width=8) (actual time=0.038..4085.767 rows=12500000 loops=12)
                                 ->  Hash  (cost=12.55..12.55 rows=2 width=108) (actual time=0.035..0.036 rows=2 loops=12)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n2  (cost=0.00..12.55 rows=2 width=108) (actual time=0.029..0.031 rows=2 loops=12)
                                             Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'FRANCE'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 11.847 ms
 Execution Time: 741687.870 ms
(68 rows)

